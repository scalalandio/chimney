name: CI build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: ['opened', 'reopened', 'labeled', 'synchronize']

jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.action != 'labeled' # run for 'opened', 'reopened' and 'synchronize'

    strategy:
      matrix:
        scala: ["2_12", "2_13"]
        jvm: ['adopt:1.8.0-292', 'adoptium:1.17.0.5']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1.3.0
        with:
          jvm: ${{ matrix.jvm }}
          apps: sbt
      - name: Clean, Check code formatting, compile, test, generate coverage report
        run: sbt ci-${{ matrix.scala }}
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  benchmark:
    needs: build
    runs-on: benchmarks
    concurrency: 'benchmark'
    if: >
      github.event_name == 'push' ||
      (github.event.action == 'labeled' && github.event.label.name == 'benchmark') ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'benchmark'))
    environment: 'benchmark'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # coursier parallel fetch is faster than cache download+upload on our custom runner machine
      #      - uses: coursier/cache-action@v6

      - uses: coursier/setup-action@v1.3.0
        with:
          jvm: 'adoptium:1.17.0.5' # TODO LB java version from matrix
          apps: sbt

      - name: Run benchmarks
        run: sbt "++2.13.10 benchmarks/Jmh/run -rf json -rff $(pwd)/$(git describe --tags --always).json" # TODO LB scala version from matrix

      - name: Fetch benchmarks metadata
        run: curl https://raw.githubusercontent.com/scalalandio/chimney-benchmark-results/main/meta.json -o meta.json

      - name: Get nope.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Process current benchmarks results
        run: node .github/scripts/process-benchmarks.mjs "$GITHUB_CONTEXT" "$(git describe --tags --always)"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Save benchmark results
        run: |
          mkdir -p ./results
          mv meta.json ./results
          mv $(git describe --tags --always).json ./results
          echo "$(git describe --tags --always)" > ./results/version

      - name: Upload benchmark results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results
          path: results
