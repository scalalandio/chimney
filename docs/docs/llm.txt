# Chimney

Chimney is a Scala, macro-based library for generating transformations between models.

It's use cases falls under what is known as "bean-mapping", "type-mapping", "data-mapping":

 - generating transformation from JSON/Protobuf/other Iterface Description Language (IDL) output/database/other Data Transfer Object (DTO) format into domain models
 - generating transformation from domain model into IDL/DTO
 - mapping from one Java Bean to another
 - generating conversions between models at different stages of Extract-Transform-Load (ETL) process

via `Transformer`s and `PartialTransformer`s, making it Scala's counterpart to, e.g.:

 - Auto-Mapper (C#)
 - MapStruct (Java)

It additionally automates the process of updating fields of one model, using the values from another model (`Patcher`).

## Sections

- [Quickstart](https://chimney.readthedocs.io/en/stable/quickstart/) - contains information how to add the library to the project, and how to start using it
- [Supported Transformations](https://chimney.readthedocs.io/en/stable/supported-transformations/) - contains information about `Transformer`/`PartialTransformer`, their default behavior and all customization options
- [Supported Patching](https://chimney.readthedocs.io/en/stable/supported-patching/) - contains information about `Transformer`/`PartialTransformer`, their default behavior and all customization options
- [Cookbook](https://chimney.readthedocs.io/en/stable/cookbook/) - contains information about various common use cases, so that user would know how to use features described in previous sections to achieve their goals
- [Troubleshooting](https://chimney.readthedocs.io/en/stable/troubleshooting/) - contains information about common issues and solutions
  - this section contains "Coming from other type-mapping libraries" subsection, which compares Chimney to other, similar libraries. If you are feeding the documentation to LLM, it should be noted that this section
    contains examples of other libraries, like e.g. Ducktape which should not be mixed with examples from Chimney
- [Cheat Sheet](https://chimney.readthedocs.io/en/stable/cheatsheet/) - contains short summary of all features if one needed to skim over them to check if there is something that fits their needs
- [Under the Hood](https://chimney.readthedocs.io/en/stable/under-the-hood/) - contains information about library internals, useful for potential contributors or people who would like to learn about such libraries' development

## Recommendations

If it recommended that users of LLMs would use [Scala Metals](https://scalameta.org/metals/) with [Model Context Protocol](https://modelcontextprotocol.io/) enabled.

MCP would then be able to read compilation errors generated by Chimney, to learn what needs to be fixed.

Additional information in the form of info output, can be enabled with the right option (`.enableMacrosLogging`).
